generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PaymentMethod {
  UPI_PHONE
  UPI_QR
  CASH
}

model User {
  id              String                  @id @default(cuid())
  clerkUserId     String                  @unique
  email           String                  @unique
  name            String?
  createdAt       DateTime                @default(now())
  updatedAt       DateTime                @updatedAt
  categories      Category[]
  transactions    Transaction[]
  monthlyBudgets  MonthlyBudget[]
  categoryBudgets CategoryMonthlyBudget[]
}

model Category {
  id              String                  @id @default(cuid())
  userId          String
  name            String
  colorHex        String?
  createdAt       DateTime                @default(now())
  updatedAt       DateTime                @updatedAt
  user            User                    @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions    Transaction[]
  categoryBudgets CategoryMonthlyBudget[]

  @@unique([userId, name])
}

model Transaction {
  id                String        @id @default(cuid())
  userId            String
  amount            Decimal
  categoryId        String?
  description       String?
  paymentMethod     PaymentMethod
  spendingDate      DateTime      @default(now())
  contactIdentifier String
  recipientName     String?
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  user              User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  category          Category?     @relation(fields: [categoryId], references: [id])

  @@index([userId, spendingDate])
  @@index([paymentMethod, spendingDate])
}

model MonthlyBudget {
  id        String   @id @default(cuid())
  userId    String
  monthKey  String
  amount    Decimal
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, monthKey])
}

model CategoryMonthlyBudget {
  id         String   @id @default(cuid())
  userId     String
  categoryId String
  monthKey   String
  amount     Decimal
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@unique([userId, categoryId, monthKey])
}
